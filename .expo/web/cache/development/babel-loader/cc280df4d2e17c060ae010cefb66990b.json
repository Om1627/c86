{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP WORLD\\\\Desktop\\\\barter\\\\screens\\\\Exchange.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport firebase from 'firebase';\nimport db from \"../config\";\nimport MyHeader from \"../components/MyHeader\";\n\nvar Exchange = function (_Component) {\n  _inherits(Exchange, _Component);\n\n  var _super = _createSuper(Exchange);\n\n  function Exchange() {\n    var _this;\n\n    _classCallCheck(this, Exchange);\n\n    _this = _super.call(this);\n\n    _this.addItem = function (itemName, description) {\n      var userName = _this.state.userName;\n\n      var exchangeId = _this.createUniqueId();\n\n      db.collection(\"exchange_requests\").add({\n        \"user_id\": userName,\n        \"item_name\": itemName,\n        \"description\": description,\n        \"exchangeId\": exchangeId,\n        \"item_status\": 'requested'\n      });\n\n      _this.setState({\n        itemName: '',\n        description: ''\n      });\n\n      db.collection(\"users\").where(\"email_id\", \"==\", userId).get().then().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection(\"users\").doc(doc.id).update({\n            IsExchangeRequestActive: true\n          });\n        });\n      });\n      return Alert.alert('Item ready to exchange', '', [{\n        text: 'OK',\n        onPress: function onPress() {\n          _this.props.navigation.navigate('HomeScreen');\n        }\n      }]);\n    };\n\n    _this.receiveditems = function (itemName) {\n      var userId = _this.state.userId;\n      var requestId = _this.state.exchangeId;\n      db.collection(\"received_items\").add({\n        user_id: userId,\n        item_name: itemName,\n        request_id: requestId,\n        itemStatus: \"received\"\n      });\n    };\n\n    _this.getItemRequest = function () {\n      var Request = db.collection(\"exchange_requests\").where(\"user_id\", \"==\", _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          if (doc.data().item_status !== \"received\") {\n            _this.setState({\n              exchangeId: doc.data().exchangeId,\n              requesteditemName: doc.data().item_name,\n              itemStatus: doc.data().item_status,\n              docId: doc.id\n            });\n          }\n        });\n      });\n    };\n\n    _this.sendNotification = function () {\n      db.collection(\"users\").where(\"email_id\", \"==\", _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var name = doc.data().first_name;\n          var lastName = doc.data().last_name;\n          db.collection(\"all_notifications\").where(\"exchange_id\", \"==\", _this.state.exchangeId).get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              var donorId = doc.data().donor_id;\n              var itemName = doc.data().item_name;\n              db.collection(\"all_notifications\").add({\n                targeted_user_id: donorId,\n                message: name + \" \" + lastName + \" received the item \" + itemName,\n                notification_status: \"unread\",\n                item_name: itemName\n              });\n            });\n          });\n        });\n      });\n    };\n\n    _this.updateitemRequestStatus = function () {\n      db.collection(\"exchange_requests\").doc(_this.state.docId).update({\n        item_status: \"received\"\n      });\n      db.collection(\"users\").where(\"email_id\", \"==\", _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection(\"users\").doc(doc.id).update({\n            IsExchangeRequestActive: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      userName: firebase.auth().currentUser.email,\n      itemName: \"\",\n      description: \"\",\n      isExchangeRequestActive: false,\n      itemStatus: '',\n      exchangeId: '',\n      requesteditemName: ''\n    };\n    return _this;\n  }\n\n  _createClass(Exchange, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"getIsitemRequestActive\",\n    value: function getIsitemRequestActive() {\n      var _this2 = this;\n\n      db.collection(\"users\").where(\"email_id\", \"==\", this.state.userId).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this2.setState({\n            IsExchangeRequestActive: doc.data().IsExchangeRequestActive,\n            userDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getItemRequest();\n      this.getIsitemRequestActive();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isExchangeRequestActive === false) {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 9\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Add Item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 9\n          }\n        }), React.createElement(KeyboardAvoidingView, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 9\n          }\n        }, React.createElement(TextInput, {\n          style: styles.formTextInput,\n          placeholder: \"Item Name\",\n          maxLength: 8,\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              itemName: text\n            });\n          },\n          value: this.state.itemName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 9\n          }\n        }), React.createElement(TextInput, {\n          multiline: true,\n          numberOfLines: 4,\n          style: [styles.formTextInput, {\n            height: 100\n          }],\n          placeholder: \"Description\",\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              description: text\n            });\n          },\n          value: this.state.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 3\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: [styles.button, {\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            _this3.addItem(_this3.state.itemName, _this3.state.description);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 3\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#ffff',\n            fontSize: 18,\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 5\n          }\n        }, \"Add Item\"))));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }\n        }, React.createElement(MyHeader, {\n          title: \"item Status\",\n          navigation: this.props.navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }\n        })), React.createElement(View, {\n          style: styles.itemstatus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: RFValue(20)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }\n        }, \"Name of the item\"), React.createElement(Text, {\n          style: styles.requesteditemName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }\n        }, this.state.requesteditemName), React.createElement(Text, {\n          style: styles.status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }\n        }, \"Status\"), React.createElement(Text, {\n          style: styles.itemStatus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }\n        }, this.state.itemStatus)), React.createElement(View, {\n          style: styles.buttonView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            _this3.sendNotification();\n\n            _this3.updateitemRequestStatus();\n\n            _this3.receiveditems(_this3.state.requesteditemName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.buttontxt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }\n        }, \"item Recived\"))));\n      }\n    }\n  }]);\n\n  return Exchange;\n}(Component);\n\nexport { Exchange as default };\nvar styles = StyleSheet.create({\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/HP WORLD/Desktop/barter/screens/Exchange.js"],"names":["React","Component","firebase","db","MyHeader","Exchange","addItem","itemName","description","userName","state","exchangeId","createUniqueId","collection","add","setState","where","userId","get","then","snapshot","forEach","doc","id","update","IsExchangeRequestActive","Alert","alert","text","onPress","props","navigation","navigate","receiveditems","requestId","user_id","item_name","request_id","itemStatus","getItemRequest","Request","data","item_status","requesteditemName","docId","sendNotification","name","first_name","lastName","last_name","donorId","donor_id","targeted_user_id","message","notification_status","updateitemRequestStatus","auth","currentUser","email","isExchangeRequestActive","Math","random","toString","substring","onSnapshot","querySnapshot","userDocId","getIsitemRequestActive","flex","justifyContent","alignItems","styles","formTextInput","height","button","marginTop","color","fontSize","fontWeight","itemstatus","RFValue","status","buttonView","buttontxt","StyleSheet","create","width","alignSelf","borderColor","borderRadius","borderWidth","padding","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, StyleSheet, Text, TextInput,KeyboardAvoidingView,TouchableOpacity,Alert, ToastAndroid } from 'react-native';\nimport firebase from 'firebase';\nimport db from '../config';\nimport MyHeader from '../components/MyHeader'\n\nexport default class Exchange extends Component{\n\n  constructor(){\n    super()\n    this.state = {\n      userName : firebase.auth().currentUser.email,\n      itemName : \"\",\n      description : \"\",\n      isExchangeRequestActive:false,\n      itemStatus:'',\n      exchangeId:'',\n      requesteditemName:''\n    }\n  }\n\n  createUniqueId(){\n    return Math.random().toString(36).substring(7);\n  }\n\n  addItem=(itemName, description)=>{\n    var userName = this.state.userName\n    var exchangeId = this.createUniqueId()\n    db.collection(\"exchange_requests\").add({\n      \"user_id\"    : userName,\n      \"item_name\"   : itemName,\n      \"description\" : description,\n      \"exchangeId\"  : exchangeId,\n      \"item_status\" : 'requested'\n     })\n     this.setState({\n       itemName : '',\n       description :''\n     })\n\n     db.collection(\"users\")\n     .where(\"email_id\", \"==\", userId)\n     .get()\n     .then()\n     .then((snapshot) => {\n       snapshot.forEach((doc) => {\n         db.collection(\"users\").doc(doc.id).update({\n           IsExchangeRequestActive: true,\n         });\n       });\n     });\n\n    \n     return Alert.alert(\n          'Item ready to exchange',\n          '',\n          [\n            {text: 'OK', onPress: () => {\n\n              this.props.navigation.navigate('HomeScreen')\n            }}\n          ]\n      );\n     \n  }\n  receiveditems = (itemName) => {\n    var userId = this.state.userId;\n    var requestId = this.state.exchangeId;\n    db.collection(\"received_items\").add({\n      user_id: userId,\n      item_name: itemName,\n      request_id: requestId,\n      itemStatus: \"received\",\n    });\n  };\n\n  getIsitemRequestActive() {\n    db.collection(\"users\")\n      .where(\"email_id\", \"==\", this.state.userId)\n      .onSnapshot((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          this.setState({\n            IsExchangeRequestActive: doc.data().IsExchangeRequestActive,\n            userDocId: doc.id,\n          });\n        });\n      });\n  }\n\n  getItemRequest = () => {\n    // getting the requested item\n    var Request = db\n      .collection(\"exchange_requests\")\n      .where(\"user_id\", \"==\", this.state.userId)\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          if (doc.data().item_status !== \"received\") {\n            this.setState({\n              exchangeId: doc.data().exchangeId,\n              requesteditemName: doc.data().item_name,\n              itemStatus: doc.data().item_status,\n          \n              docId: doc.id,\n            });\n          }\n        });\n      });\n  };\n\n  sendNotification = () => {\n    //to get the first name and last name\n    db.collection(\"users\")\n      .where(\"email_id\", \"==\", this.state.userId)\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          var name = doc.data().first_name;\n          var lastName = doc.data().last_name;\n\n          // to get the donor id and item nam\n          db.collection(\"all_notifications\")\n            .where(\"exchange_id\", \"==\", this.state.exchangeId)\n            .get()\n            .then((snapshot) => {\n              snapshot.forEach((doc) => {\n                var donorId = doc.data().donor_id;\n                var itemName = doc.data().item_name;\n\n                //targert user id is the donor id to send notification to the user\n                db.collection(\"all_notifications\").add({\n                  targeted_user_id: donorId,\n                  message:\n                    name + \" \" + lastName + \" received the item \" + itemName,\n                  notification_status: \"unread\",\n                  item_name: itemName,\n                });\n              });\n            });\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getItemRequest();\n    this.getIsitemRequestActive();\n  }\n\n  updateitemRequestStatus = () => {\n    //updating the item status after receiving the item\n    db.collection(\"exchange_requests\").doc(this.state.docId).update({\n      item_status: \"received\",\n    });\n\n    //getting the  doc id to update the users doc\n    db.collection(\"users\")\n      .where(\"email_id\", \"==\", this.state.userId)\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          //updating the doc\n          db.collection(\"users\").doc(doc.id).update({\n            IsExchangeRequestActive: false,\n          });\n        });\n      });\n  };\n  render(){\n    if (this.state.isExchangeRequestActive===false){\n      return (\n        <View style={{flex:1}}>\n        <MyHeader title=\"Add Item\"/>\n        <KeyboardAvoidingView style={{flex:1,justifyContent:'center', alignItems:'center'}}>\n          \n        <TextInput\n    style={styles.formTextInput}\n    placeholder ={\"Item Name\"}\n    maxLength ={8}\n    onChangeText={(text)=>{\n      this.setState({\n        itemName: text\n      })\n    }}\n    value={this.state.itemName}\n  />\n  <TextInput\n    multiline\n    numberOfLines={4}\n    style={[styles.formTextInput,{height:100}]}\n    placeholder ={\"Description\"}\n    onChangeText={(text)=>{\n      this.setState({\n        description: text\n      })\n    }}\n    value={this.state.description}\n  \n  />\n  <TouchableOpacity\n    style={[styles.button,{marginTop:10}]}\n    onPress = {()=>{this.addItem(this.state.itemName, this.state.description)}}\n    >\n    <Text style={{color:'#ffff', fontSize:18, fontWeight:'bold'}}>Add Item</Text>\n  </TouchableOpacity>\n  \n             \n          \n         \n        </KeyboardAvoidingView>\n        </View>\n      )\n    }\n    else{\n      return(\n      \n          <View style={{ flex: 1}}>\n            <View\n              style={{\n                flex: 0.1,\n              }}\n            >\n              <MyHeader title=\"item Status\" navigation={this.props.navigation} />\n            </View>\n          \n            <View\n              style={styles.itemstatus}\n            >\n              <Text\n                style={{\n                  fontSize: RFValue(20),\n  \n                }}\n              >\n                Name of the item\n              </Text>\n              <Text\n                style={styles.requesteditemName}\n              >\n                {this.state.requesteditemName}\n              </Text>\n              <Text\n                style={styles.status}\n              >\n                Status\n              </Text>\n              <Text\n                style={styles.itemStatus}\n              >\n                {this.state.itemStatus}\n              </Text>\n            </View>\n            <View\n              style={styles.buttonView}\n            >\n              <TouchableOpacity\n                style={styles.button}\n                onPress={() => {\n                  this.sendNotification();\n                  this.updateitemRequestStatus();\n                  this.receiveditems(this.state.requesteditemName);\n                }}\n              >\n                <Text\n                  style={styles.buttontxt}\n                >\n                  item Recived\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        \n      )\n    }\n      \n    \n  }\n}\n\n\nconst styles = StyleSheet.create({\n  formTextInput:{\n    width:\"75%\",\n    height:35,\n    alignSelf:'center',\n    borderColor:'#ffab91',\n    borderRadius:10,\n    borderWidth:1,\n    marginTop:20,\n    padding:10\n  },\n  button:{\n    width:\"75%\",\n    height:50,\n    justifyContent:'center',\n    alignItems:'center',\n    borderRadius:10,\n    backgroundColor:\"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n       width: 0,\n       height: 8,\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n  },\n\n})\n"]},"metadata":{},"sourceType":"module"}